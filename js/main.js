'use strict';var _createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}(function(){'use strict';function a(a){if(i=a,j.setNumber(i),i.length===m.limit){var b=m.candies.filter(function(a){return a.number===i})[0];b?j.set(b):j.setNull()}}function b(){n=!1,a(''),j.clear()}function c(a){return(m=l[a],!!m)&&(m.index=a,j.setPosition(m.position),b(),m)}function d(){k=[],c(0)}function e(a,b,c){b.collection(a).get().then(function(a){a.forEach(function(a){var b=a.data();b.ref=a.ref,b.id=a.id,c(b)})})}function f(a){console.log('Enviando votos');var b=a.map(function(a){var b=a.position,c=a.candies,d=a.vote,e=d?c.filter(function(a){return a.number===d})[0]||g.nullCandy():g.blankCandy(),f=e.name,h=e.party;return{position:b,vote:d,name:f,party:h}});console.table(a,b),p.end.play()}var g=function(){function a(b,c,d,e){_classCallCheck(this,a),this.img=e,this.name=c,this.party=d,this.number=b}return _createClass(a,[{key:'plainObject',value:function plainObject(){return{img:this.img,name:this.name,party:this.party,number:this.number}}}],[{key:'nullCandy',value:function nullCandy(){return new a('','N\xDAMERO ERRADO','VOTO NULO')}},{key:'blankCandy',value:function blankCandy(){return new a('','','VOTO EM BRANCO')}}]),a}(),h=function(){function a(b){_classCallCheck(this,a);var c=this.root=document.querySelector(b);c&&(this.position=c.querySelector('.display-position'),this.number=c.querySelector('.display-number'),this.img=c.querySelector('.display-img'),this.blank_img=this.img.src,this.name=c.querySelector('.display-name'),this.party=c.querySelector('.display-party'),this.body=c.querySelector('.display-body'),this.footer=c.querySelector('.display-footer'))}return _createClass(a,[{key:'setNumber',value:function(a){this.number.textContent=a.trim()}},{key:'setPosition',value:function setPosition(a){this.position.textContent=a.trim()}},{key:'set',value:function set(a){this.img.src=a.img||this.blank_img,this.name.textContent=a.name,this.party.textContent=a.party,this.body.removeAttribute('hidden'),this.footer.removeAttribute('hidden')}},{key:'setNull',value:function setNull(){this.set(g.nullCandy()),this.root.classList.add('is-null')}},{key:'setBlank',value:function setBlank(){this.set(g.blankCandy()),this.root.classList.add('is-blank')}},{key:'clear',value:function(){this.img.src=this.blank_img,this.name.textContent='',this.party.textContent='',this.body.setAttribute('hidden',!0),this.footer.setAttribute('hidden',!0),this.root.classList.remove('is-null'),this.root.classList.remove('is-blank')}}]),a}(),j=new h('.display'),i='',k=[],l=[],m={},n=!1,o={insert:function insert(b){return!n&&!(isNaN(b)||0>b)&&!(i.length>=m.limit)&&void a(i+b)},confirm:function confirm(){if((i.length===m.limit||n)&&(m.vote=i||null,k.push(m),!c(m.index+1))){var a=k;return d(),a}},blank:function blank(){n=!0,i||j.setBlank()},start:function start(a){l=a,c(0)},clear:b,votes:k,display:j},p={click:new Audio(window.baseurl+'/sounds/click.mp3'),end:new Audio(window.baseurl+'/sounds/end.mp3')},q=window.firebase.firestore(),r=[];e('ballots',q,function(a){r.push(a),a.steps=[],e('steps',a.ref,function(b){a.steps.push(b),b.candies=[],e('candies',b.ref,function(a){b.candies.push(a),new Image().src=a.img}),o.start(r[0].steps)})});var s={digitar:function digitar(){o.insert(this.textContent.trim())},branco:function branco(){o.blank()},corrigir:function corrigir(){o.clear()},confirmar:function confirmar(){var a=o.confirm();a&&f(a)}};Array.prototype.forEach.call(document.querySelectorAll('.panel button'),function(a){return a.addEventListener('click',function(){s[this.dataset.click].call(this),p.click.play()})})})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsic2V0TnVtYmVyIiwibGVuZ3RoIiwibGltaXQiLCJjYW5kaWVzIiwiZmlsdGVyIiwibnVtYmVyIiwic2V0Iiwic2V0TnVsbCIsImNsZWFyIiwiaW5kZXgiLCJzZXRQb3NpdGlvbiIsInBvc2l0aW9uIiwiY29sbGVjdGlvbiIsImdldCIsInRoZW4iLCJmb3JFYWNoIiwiZGF0YSIsInJlZiIsImlkIiwiY29uc29sZSIsImxvZyIsIm1hcCIsInZvdGUiLCJudWxsQ2FuZHkiLCJibGFua0NhbmR5IiwibmFtZSIsInBhcnR5IiwidGFibGUiLCJlbmQiLCJwbGF5IiwiaW1nIiwicm9vdCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImJsYW5rX2ltZyIsInNyYyIsImJvZHkiLCJmb290ZXIiLCJ0ZXh0Q29udGVudCIsInRyaW0iLCJyZW1vdmVBdHRyaWJ1dGUiLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmUiLCJpbnNlcnQiLCJpc05hTiIsImNvbmZpcm0iLCJwdXNoIiwiYmxhbmsiLCJzZXRCbGFuayIsInN0YXJ0Iiwidm90ZXMiLCJkaXNwbGF5IiwiY2xpY2siLCJBdWRpbyIsIndpbmRvdyIsImJhc2V1cmwiLCJmaXJlYmFzZSIsImZpcmVzdG9yZSIsInN0ZXBzIiwiSW1hZ2UiLCJkaWdpdGFyIiwiYnJhbmNvIiwiY29ycmlnaXIiLCJjb25maXJtYXIiLCJBcnJheSIsInByb3RvdHlwZSIsImNhbGwiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRhdGFzZXQiXSwibWFwcGluZ3MiOiJ5WEFBQyxXQUFZLENBQ2IsYUFxSEEsYUFBd0IsQ0FHcEIsR0FGQSxHQUVBLENBREEsRUFBUUEsU0FBUixHQUNBLENBQUksRUFBT0MsTUFBUCxHQUFrQixFQUFLQyxLQUEzQixDQUFrQyxDQUM5QixHQUFNLEdBQVEsRUFBS0MsT0FBTCxDQUFhQyxNQUFiLENBQW9CLGtCQUFLLEdBQUVD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LENBQzVDLEVBQVMyQyxLQUFULENBQWVaLElBQWYsR0FENEMsQ0FJNUMsRUFBUzdDLE9BQVQsQ0FBbUIsRUFKeUIsQ0FLNUMsRUFBYSxTQUFiLENBQXdCLEVBQVNjLEdBQWpDLENBQXNDLFdBQWEsQ0FDL0MsRUFBU2QsT0FBVCxDQUFpQjZDLElBQWpCLEdBRCtDLENBSTlDLEdBQUlhLE1BQUosRUFBRCxDQUFjMUIsR0FBZCxDQUFvQixFQUFVTCxHQUVqQyxDQU5ELENBTDRDLENBYTVDLEVBQU9xQixLQUFQLENBQWEsRUFBZ0IsQ0FBaEIsRUFBbUJTLEtBQWhDLENBQ0gsQ0FkRCxDQWlCSCxDQXJCRCxDQTNLYSxDQTJNYixHQUFNLEdBQWMsQ0FDaEJFLFFBQVMsa0JBQVksQ0FDakIsRUFBT2pCLE1BQVAsQ0FBYyxLQUFLUCxXQUFMLENBQWlCQyxJQUFqQixFQUFkLENBQ0gsQ0FIZSxDQUloQndCLE9BQVEsaUJBQVksQ0FDaEIsRUFBT2QsS0FBUCxFQUNILENBTmUsQ0FPaEJlLFNBQVUsbUJBQVksQ0FDbEIsRUFBT3hELEtBQVAsRUFDSCxDQVRlLENBVWhCeUQsVUFBVyxvQkFBWSxDQUNuQixHQUFNLEdBQVEsRUFBT2xCLE9BQVAsRUFBZCxDQUNBLEdBQVMsSUFDWixDQWJlLENBQXBCLENBZ0JBbUIsTUFBTUMsU0FBTixDQUFnQnBELE9BQWhCLENBQXdCcUQsSUFBeEIsQ0FDSXBDLFNBQVNxQyxnQkFBVCxDQUEwQixlQUExQixDQURKLENBRUksa0JBQU8sR0FBSUMsZ0JBQUosQ0FBcUIsT0FBckIsQ0FBOEIsVUFBWSxDQUM3QyxFQUFZLEtBQUtDLE9BQUwsQ0FBYWpCLEtBQXpCLEVBQWdDYyxJQUFoQyxDQUFxQyxJQUFyQyxDQUQ2QyxDQUU3QyxFQUFPZCxLQUFQLENBQWF6QixJQUFiLEVBQ0gsQ0FITSxDQUFQLENBRkosQ0FxQ0MsQ0FoUUEsRyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgpIHtcbid1c2Ugc3RyaWN0JztcblxuY2xhc3MgQ2FuZHkge1xyXG4gICAgY29uc3RydWN0b3IobnVtYmVyLCBuYW1lLCBwYXJ0eSwgaW1nKSB7XHJcbiAgICAgICAgdGhpcy5pbWcgPSBpbWc7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLnBhcnR5ID0gcGFydHk7XHJcbiAgICAgICAgdGhpcy5udW1iZXIgPSBudW1iZXI7XHJcbiAgICB9XHJcbiAgICBwbGFpbk9iamVjdCgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpbWc6IHRoaXMuaW1nLFxyXG4gICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXHJcbiAgICAgICAgICAgIHBhcnR5OiB0aGlzLnBhcnR5LFxyXG4gICAgICAgICAgICBudW1iZXI6IHRoaXMubnVtYmVyXHJcbiAgICAgICAgfVxyXG4gICAgfSBcclxuICAgIHN0YXRpYyBudWxsQ2FuZHkoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDYW5keSgnJywgJ07Dmk1FUk8gRVJSQURPJywgJ1ZPVE8gTlVMTycpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIGJsYW5rQ2FuZHkoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDYW5keSgnJywgJycsICdWT1RPIEVNIEJSQU5DTycpO1xyXG4gICAgfVxyXG59XG5cbmNsYXNzIERpc3BsYXkge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHdoYXQpIHtcclxuICAgICAgICBjb25zdCByb290ID0gdGhpcy5yb290ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih3aGF0KTtcclxuICAgICAgICBpZiAoIXJvb3QpIHJldHVybjtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uID0gcm9vdC5xdWVyeVNlbGVjdG9yKCcuZGlzcGxheS1wb3NpdGlvbicpO1xyXG4gICAgICAgIHRoaXMubnVtYmVyID0gcm9vdC5xdWVyeVNlbGVjdG9yKCcuZGlzcGxheS1udW1iZXInKTtcclxuICAgICAgICB0aGlzLmltZyA9IHJvb3QucXVlcnlTZWxlY3RvcignLmRpc3BsYXktaW1nJyk7XHJcbiAgICAgICAgdGhpcy5ibGFua19pbWcgPSB0aGlzLmltZy5zcmM7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gcm9vdC5xdWVyeVNlbGVjdG9yKCcuZGlzcGxheS1uYW1lJyk7XHJcbiAgICAgICAgdGhpcy5wYXJ0eSA9IHJvb3QucXVlcnlTZWxlY3RvcignLmRpc3BsYXktcGFydHknKTtcclxuICAgICAgICB0aGlzLmJvZHkgPSByb290LnF1ZXJ5U2VsZWN0b3IoJy5kaXNwbGF5LWJvZHknKTtcclxuICAgICAgICB0aGlzLmZvb3RlciA9IHJvb3QucXVlcnlTZWxlY3RvcignLmRpc3BsYXktZm9vdGVyJyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0TnVtYmVyKG4pIHtcclxuICAgICAgICB0aGlzLm51bWJlci50ZXh0Q29udGVudCA9IG4udHJpbSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFBvc2l0aW9uKHApIHtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uLnRleHRDb250ZW50ID0gcC50cmltKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0KGNhbmR5KSB7XHJcbiAgICAgICAgdGhpcy5pbWcuc3JjID0gY2FuZHkuaW1nIHx8IHRoaXMuYmxhbmtfaW1nO1xyXG4gICAgICAgIHRoaXMubmFtZS50ZXh0Q29udGVudCA9IGNhbmR5Lm5hbWU7XHJcbiAgICAgICAgdGhpcy5wYXJ0eS50ZXh0Q29udGVudCA9IGNhbmR5LnBhcnR5O1xyXG4gICAgICAgIHRoaXMuYm9keS5yZW1vdmVBdHRyaWJ1dGUoJ2hpZGRlbicpO1xyXG4gICAgICAgIHRoaXMuZm9vdGVyLnJlbW92ZUF0dHJpYnV0ZSgnaGlkZGVuJyk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0TnVsbCgpIHtcclxuICAgICAgICB0aGlzLnNldChDYW5keS5udWxsQ2FuZHkoKSk7XHJcbiAgICAgICAgdGhpcy5yb290LmNsYXNzTGlzdC5hZGQoJ2lzLW51bGwnKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRCbGFuaygpIHtcclxuICAgICAgICB0aGlzLnNldChDYW5keS5ibGFua0NhbmR5KCkpO1xyXG4gICAgICAgIHRoaXMucm9vdC5jbGFzc0xpc3QuYWRkKCdpcy1ibGFuaycpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsZWFyKCkge1xyXG4gICAgICAgIHRoaXMuaW1nLnNyYyA9IHRoaXMuYmxhbmtfaW1nO1xyXG4gICAgICAgIHRoaXMubmFtZS50ZXh0Q29udGVudCA9ICcnO1xyXG4gICAgICAgIHRoaXMucGFydHkudGV4dENvbnRlbnQgPSAnJztcclxuICAgICAgICB0aGlzLmJvZHkuc2V0QXR0cmlidXRlKCdoaWRkZW4nLCB0cnVlKTtcclxuICAgICAgICB0aGlzLmZvb3Rlci5zZXRBdHRyaWJ1dGUoJ2hpZGRlbicsIHRydWUpO1xyXG4gICAgICAgIHRoaXMucm9vdC5jbGFzc0xpc3QucmVtb3ZlKCdpcy1udWxsJyk7XHJcbiAgICAgICAgdGhpcy5yb290LmNsYXNzTGlzdC5yZW1vdmUoJ2lzLWJsYW5rJyk7XHJcbiAgICB9XHJcblxyXG59XG5cbmNvbnN0IGRpc3BsYXkgPSBuZXcgRGlzcGxheSgnLmRpc3BsYXknKTtcclxuXHJcbmxldCBudW1iZXIgPSAnJztcclxubGV0IHZvdGVzID0gW107XHJcbmxldCBzdGVwcyA9IFtdO1xyXG5sZXQgc3RlcCA9IHt9O1xyXG5sZXQgaXNCbGFuayA9IGZhbHNlO1xyXG5cclxuY29uc3QgYmFsbG90ID0ge1xyXG4gICAgaW5zZXJ0OiBudW0gPT4ge1xyXG4gICAgICAgIGlmIChpc0JsYW5rKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgaWYgKGlzTmFOKG51bSkgfHwgbnVtIDwgMCkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIGlmIChudW1iZXIubGVuZ3RoID49IHN0ZXAubGltaXQpIHJldHVybiBmYWxzZTtcclxuICAgICAgICBzZXROdW1iZXIobnVtYmVyICsgbnVtKTtcclxuICAgIH0sXHJcbiAgICBjb25maXJtOiAoKSA9PiB7XHJcbiAgICAgICAgaWYgKG51bWJlci5sZW5ndGggPT09IHN0ZXAubGltaXQgfHwgaXNCbGFuaykge1xyXG4gICAgICAgICAgICBzdGVwLnZvdGUgPSBudW1iZXIgfHwgbnVsbDtcclxuICAgICAgICAgICAgdm90ZXMucHVzaChzdGVwKTtcclxuICAgICAgICAgICAgaWYgKCFzZXRTdGVwKHN0ZXAuaW5kZXggKyAxKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0cyA9IHZvdGVzO1xyXG4gICAgICAgICAgICAgICAgcmVzdGFydCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgYmxhbms6ICgpID0+IHtcclxuICAgICAgICBpc0JsYW5rID0gdHJ1ZTtcclxuICAgICAgICBpZiAoIW51bWJlcikgZGlzcGxheS5zZXRCbGFuaygpO1xyXG4gICAgfSxcclxuICAgIHN0YXJ0OiAocykgPT4ge1xyXG4gICAgICAgIHN0ZXBzID0gcztcclxuICAgICAgICBzZXRTdGVwKDApO1xyXG4gICAgfSxcclxuICAgIGNsZWFyLFxyXG4gICAgdm90ZXMsXHJcbiAgICBkaXNwbGF5XHJcbn07XHJcblxyXG5mdW5jdGlvbiBzZXROdW1iZXIobnVtKSB7XHJcbiAgICBudW1iZXIgPSBudW07XHJcbiAgICBkaXNwbGF5LnNldE51bWJlcihudW1iZXIpO1xyXG4gICAgaWYgKG51bWJlci5sZW5ndGggPT09IHN0ZXAubGltaXQpIHtcclxuICAgICAgICBjb25zdCBjYW5keSA9IHN0ZXAuY2FuZGllcy5maWx0ZXIoYyA9PiBjLm51bWJlciA9PT0gbnVtYmVyKVswXTtcclxuICAgICAgICBpZiAoY2FuZHkpIGRpc3BsYXkuc2V0KGNhbmR5KTtcclxuICAgICAgICBlbHNlIGRpc3BsYXkuc2V0TnVsbCgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjbGVhcigpIHtcclxuICAgIGlzQmxhbmsgPSBmYWxzZTtcclxuICAgIHNldE51bWJlcignJyk7XHJcbiAgICBkaXNwbGF5LmNsZWFyKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNldFN0ZXAoaSkge1xyXG4gICAgc3RlcCA9IHN0ZXBzW2ldO1xyXG4gICAgaWYgKCFzdGVwKSByZXR1cm4gZmFsc2U7XHJcbiAgICBzdGVwLmluZGV4ID0gaTtcclxuICAgIGRpc3BsYXkuc2V0UG9zaXRpb24oc3RlcC5wb3NpdGlvbik7XHJcbiAgICBjbGVhcigpO1xyXG4gICAgcmV0dXJuIHN0ZXA7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlc3RhcnQoKSB7XHJcbiAgICB2b3RlcyA9IFtdO1xyXG4gICAgLy8gTW9zdHJhciBtZW5zYWdlbSBmaW5hbCBkbyBkaXNwbGF5XHJcbiAgICBzZXRTdGVwKDApO1xyXG59XG5cbmNvbnN0IHNvdW5kcyA9IHtcclxuICAgIGNsaWNrOiBuZXcgQXVkaW8oYCR7d2luZG93LmJhc2V1cmx9L3NvdW5kcy9jbGljay5tcDNgKSxcclxuICAgIGVuZDogbmV3IEF1ZGlvKGAke3dpbmRvdy5iYXNldXJsfS9zb3VuZHMvZW5kLm1wM2ApXHJcbn07XG5cbi8vIGNvbnN0IEZJUkVfQVVUSCA9IHdpbmRvdy5maXJlYmFzZS5hdXRoKCk7XHJcblxyXG4vLyBodHRwczovL2ZpcmViYXNlLmdvb2dsZS5jb20vZG9jcy9maXJlc3RvcmUvcXVpY2tzdGFydD9hdXRodXNlcj0wXHJcbmNvbnN0IEZJUkVTVE9SRSA9IHdpbmRvdy5maXJlYmFzZS5maXJlc3RvcmUoKTtcclxuXHJcbmZ1bmN0aW9uIGdldENvbGxldGlvbihjb2xsTmFtZSwgcmVmLCBjYWxsYmFjaykge1xyXG4gICAgcmVmLmNvbGxlY3Rpb24oY29sbE5hbWUpLmdldCgpLnRoZW4oc25hcCA9PiB7XHJcbiAgICAgICAgc25hcC5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBkYXRhID0gaXRlbS5kYXRhKCk7XHJcbiAgICAgICAgICAgIGRhdGEucmVmID0gaXRlbS5yZWY7XHJcbiAgICAgICAgICAgIGRhdGEuaWQgPSBpdGVtLmlkO1xyXG4gICAgICAgICAgICBjYWxsYmFjayhkYXRhKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5jb25zdCBiYWxsb3RfYWxsX2RhdGEgPSBbXTtcclxuZ2V0Q29sbGV0aW9uKCdiYWxsb3RzJywgRklSRVNUT1JFLCBiYWxsRGF0YSA9PiB7XHJcbiAgICBiYWxsb3RfYWxsX2RhdGEucHVzaChiYWxsRGF0YSk7XHJcblxyXG4gICAgYmFsbERhdGEuc3RlcHMgPSBbXTtcclxuICAgIGdldENvbGxldGlvbignc3RlcHMnLCBiYWxsRGF0YS5yZWYsIHN0ZXBEYXRhID0+IHtcclxuICAgICAgICBiYWxsRGF0YS5zdGVwcy5wdXNoKHN0ZXBEYXRhKTtcclxuXHJcbiAgICAgICAgLy8gcGF1c2FyIG8gYXBsaWNhdGl2byBhcXVpXHJcbiAgICAgICAgc3RlcERhdGEuY2FuZGllcyA9IFtdO1xyXG4gICAgICAgIGdldENvbGxldGlvbignY2FuZGllcycsIHN0ZXBEYXRhLnJlZiwgY2FuZHlEYXRhID0+IHtcclxuICAgICAgICAgICAgc3RlcERhdGEuY2FuZGllcy5wdXNoKGNhbmR5RGF0YSk7XHJcblxyXG4gICAgICAgICAgICAvLyBjb250aW51YXIgYSBleGVjdcOnw6NvIGFxdWlcclxuICAgICAgICAgICAgKG5ldyBJbWFnZSgpKS5zcmMgPSBjYW5keURhdGEuaW1nO1xyXG5cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgYmFsbG90LnN0YXJ0KGJhbGxvdF9hbGxfZGF0YVswXS5zdGVwcyk7XHJcbiAgICB9KTtcclxuXHJcblxyXG59KTtcclxuXHJcbi8vIGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2ZpcmViYXNlXHJcblxyXG4vKipcclxuICogVE9ETzogQ2FycmVnYXIgbGlzdGEgZGUgZWxlacOnw7VlcyB7dMOtdHVsbywgZGVzY3Jpw6fDo28sIHBhc3Nvc1t7cG9zaXRpb24sIGxpbWl0LCBjYW5kaWVzW119XX1cclxuICogVE9ETzogQ2FycmVnYXIgbGlzdGEgZGUgc2FsYXMgW3tub21lLCB0dXJtYSwgcGVyw61vZG99XVxyXG4gKiBUT0RPOiBJbnN0YW5jaWFyIHR1cm5vcyBkYSBlbGVpw6fDo28gW2Fub11cclxuICogVE9ETzogTGlzdGFyIHJlc3VsdGFkb3NcclxuICovXHJcblxyXG5jb25zdCBwYW5lbEFjdGlvbiA9IHtcclxuICAgIGRpZ2l0YXI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBiYWxsb3QuaW5zZXJ0KHRoaXMudGV4dENvbnRlbnQudHJpbSgpKTtcclxuICAgIH0sXHJcbiAgICBicmFuY286IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBiYWxsb3QuYmxhbmsoKTtcclxuICAgIH0sXHJcbiAgICBjb3JyaWdpcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGJhbGxvdC5jbGVhcigpO1xyXG4gICAgfSxcclxuICAgIGNvbmZpcm1hcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGNvbnN0IHZvdGVzID0gYmFsbG90LmNvbmZpcm0oKTtcclxuICAgICAgICB2b3RlcyAmJiBzZW5kQmFsbG90KHZvdGVzKTtcclxuICAgIH1cclxufTtcclxuXHJcbkFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoXHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucGFuZWwgYnV0dG9uJyksXHJcbiAgICBidG4gPT4gYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHBhbmVsQWN0aW9uW3RoaXMuZGF0YXNldC5jbGlja10uY2FsbCh0aGlzKTtcclxuICAgICAgICBzb3VuZHMuY2xpY2sucGxheSgpO1xyXG4gICAgfSlcclxuKTtcclxuXHJcbmZ1bmN0aW9uIHNlbmRCYWxsb3Qodm90ZXMpIHtcclxuICAgIGNvbnNvbGUubG9nKCdFbnZpYW5kbyB2b3RvcycpO1xyXG5cclxuICAgIGNvbnN0IHJlc3VsdHMgPSB2b3Rlcy5tYXAodiA9PiB7XHJcbiAgICAgICAgY29uc3Qge1xyXG4gICAgICAgICAgICBwb3NpdGlvbixcclxuICAgICAgICAgICAgY2FuZGllcyxcclxuICAgICAgICAgICAgdm90ZVxyXG4gICAgICAgIH0gPSB2O1xyXG4gICAgICAgIGNvbnN0IGNhbmR5ID0gIXZvdGUgP1xyXG4gICAgICAgICAgICBDYW5keS5ibGFua0NhbmR5KCkgOlxyXG4gICAgICAgICAgICBjYW5kaWVzLmZpbHRlcihjID0+IGMubnVtYmVyID09PSB2b3RlKVswXSB8fFxyXG4gICAgICAgICAgICBDYW5keS5udWxsQ2FuZHkoKTtcclxuICAgICAgICBjb25zdCB7XHJcbiAgICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICAgIHBhcnR5XHJcbiAgICAgICAgfSA9IGNhbmR5O1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uLFxyXG4gICAgICAgICAgICB2b3RlLFxyXG4gICAgICAgICAgICBuYW1lLFxyXG4gICAgICAgICAgICBwYXJ0eVxyXG4gICAgICAgIH07XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zb2xlLnRhYmxlKHZvdGVzLCByZXN1bHRzKTtcclxuICAgIHNvdW5kcy5lbmQucGxheSgpO1xyXG59XG5cbn0oKSk7XG4iXX0=

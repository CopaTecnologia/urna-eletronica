'use strict';var _createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}(function(){'use strict';function a(a){if(i=a,j.setNumber(i),i.length===m.limit){var b=m.candies.filter(function(a){return a.number===i})[0];b?j.set(b):j.setNull()}}function b(){n=!1,a(''),j.clear()}function c(a){return(m=l[a],!!m)&&(m.index=a,j.setPosition(m.position),b(),m)}function d(){k=[],c(0)}function e(a,b,c){b.collection(a).get().then(function(a){a.forEach(function(a){var b=a.data();b.ref=a.ref,b.id=a.id,c(b,a.ref)})})}function f(a){console.log('Enviando votos');var b=a.map(function(a){var b=a.position,c=a.candies,d=a.vote,e=d?c.filter(function(a){return a.number===d})[0]||g.nullCandy():g.blankCandy(),f=e.name,h=e.party;return{position:b,vote:d,name:f,party:h}});console.table(b)}var g=function(){function a(b,c,d,e){_classCallCheck(this,a),this.img=e,this.name=c,this.party=d,this.number=b}return _createClass(a,[{key:'plainObject',value:function plainObject(){return{img:this.img,name:this.name,party:this.party,number:this.number}}}],[{key:'nullCandy',value:function nullCandy(){return new a('','N\xDAMERO ERRADO','VOTO NULO')}},{key:'blankCandy',value:function blankCandy(){return new a('','','VOTO EM BRANCO')}}]),a}(),h=function(){function a(b){_classCallCheck(this,a);var c=this.root=document.querySelector(b);c&&(this.position=c.querySelector('.display-position'),this.number=c.querySelector('.display-number'),this.img=c.querySelector('.display-img'),this.blank_img=this.img.src,this.name=c.querySelector('.display-name'),this.party=c.querySelector('.display-party'),this.body=c.querySelector('.display-body'),this.footer=c.querySelector('.display-footer'))}return _createClass(a,[{key:'setNumber',value:function(a){this.number.textContent=a.trim()}},{key:'setPosition',value:function setPosition(a){this.position.textContent=a.trim()}},{key:'set',value:function set(a){this.img.src=a.img||this.blank_img,this.name.textContent=a.name,this.party.textContent=a.party,this.body.removeAttribute('hidden'),this.footer.removeAttribute('hidden')}},{key:'setNull',value:function setNull(){this.set(g.nullCandy()),this.root.classList.add('is-null')}},{key:'setBlank',value:function setBlank(){this.set(g.blankCandy()),this.root.classList.add('is-blank')}},{key:'clear',value:function(){this.img.src=this.blank_img,this.name.textContent='',this.party.textContent='',this.body.setAttribute('hidden',!0),this.footer.setAttribute('hidden',!0),this.root.classList.remove('is-null'),this.root.classList.remove('is-blank')}}]),a}(),j=new h('.display'),i='',k=[],l=[],m={},n=!1,o={insert:function insert(b){return!n&&!(isNaN(b)||0>b)&&!(i.length>=m.limit)&&void a(i+b)},confirm:function confirm(){if((i.length===m.limit||n)&&(m.vote=i||null,k.push(m),!c(m.index+1))){var a=k;return c(0),d(),a}},blank:function blank(){n=!0,i||j.setBlank()},start:function start(a){l=a,c(0)},clear:b,votes:k,display:j},p=window.firebase.auth(),q=window.firebase.firestore(),r=[];e('ballots',q,function(a,b){r.push(a),a.steps=[],e('steps',b,function(b,c){b.ref=c,a.steps.push(b),b.candies=[],e('candies',c,function(a){b.candies.push(a),new Image().src=a.img}),o.start(r[0].steps)})});var s={digitar:function digitar(){o.insert(this.textContent.trim())},branco:function branco(){o.blank()},corrigir:function corrigir(){o.clear()},confirmar:function confirmar(){var a=o.confirm();a&&f(a)}};Array.prototype.forEach.call(document.querySelectorAll('.panel button'),function(a){return a.addEventListener('click',function(){s[this.dataset.click].call(this)})})})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
